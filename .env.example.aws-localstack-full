# Weather Service - AWS LocalStack Full Simulation Configuration
# This configuration simulates a full AWS production environment using LocalStack
# Includes S3, DynamoDB, Redis caching, and Redis rate limiting

# External API Configuration
OPENWEATHERMAP_API_KEY=your_openweathermap_api_key_here

# AWS Configuration - LocalStack endpoints
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test
AWS_DEFAULT_REGION=us-east-1
AWS_ENDPOINT_URL=http://localhost:4566

# Cache Configuration - Redis backend for production-like behavior
CACHE_ENABLED=true
CACHE_BACKEND=redis
CACHE_TTL_SECONDS=300
CACHE_PREFIX=weather-cache
REDIS_URL=redis://redis:6379/0

# Rate Limiting Configuration - Enabled with Redis backend
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REDIS_HOST=redis
RATE_LIMIT_REDIS_PORT=6379
RATE_LIMIT_REDIS_DB=0
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW_SECONDS=60

# Event Store Configuration - DynamoDB for production-like behavior
EVENT_STORE_TYPE=aws_dynamodb
EVENT_STORE_LOCAL_FILE_PATH=events.log
EVENT_STORE_AWS_DYNAMODB_TABLE_NAME=weather-svc-events

# Data Store Configuration - S3 for production-like behavior
DATA_STORE_TYPE=aws_s3
DATA_STORE_LOCAL_DIRECTORY=data
DATA_STORE_S3_BUCKET_NAME=weather-svc-data
DATA_STORE_S3_FOLDER_NAME=weather
